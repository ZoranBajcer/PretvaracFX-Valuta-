package pretvaracValuta;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.text.DecimalFormat;
import java.util.HashMap;
import java.util.ResourceBundle;
import org.json.JSONArray;
import org.json.JSONException;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.control.Button;
import javafx.scene.control.ComboBox;
import javafx.scene.control.Label;
import javafx.scene.control.TextArea;
import javafx.scene.control.TextField;

public class PretvaracController implements Initializable{
	
	@FXML private ComboBox<String> comboOne;
	@FXML private ComboBox<String> comboTwo;
	@FXML private Button button;
	@FXML private TextField textField;
	@FXML private Label status;
	@FXML private TextArea lista;
	private String inputLine;
	private String valuta;
	private String textValue;
	private String buttonLabel;
	private String formated;
	private URLconnection uc;
	private double jedinica;
	private double jedinica1;
	private double jedinica2;
	private double vrijednost;
	private double doubleValue;
	private double sum;
	private double finishSum;
	private JSONArray arr;
	private HttpURLConnection conn;
	private HashMap<String, Double> valuteKV  = new HashMap<String, Double>();
	private HashMap<String, Double> jediniceKV  = new HashMap<String, Double>();
	private StringBuilder response = null;
	private Button clickedButton;
	private DecimalFormat df;

	
	
	public void initialize(URL url, ResourceBundle rb) {
		uc = new URLconnection();
		try {
			connection();
		}
		catch (Exception e) {
			e.printStackTrace();
		}
	}

	public void connection() {
		conn = uc.urlConnect();
		try (InputStreamReader  sr =new InputStreamReader(conn.getInputStream());
		     BufferedReader in = new BufferedReader(sr)){ 			
			 response = new StringBuilder();
			 while ((inputLine = in.readLine()) != null) {
				 response.append(inputLine);						// JSON -> StringBuilder response
		}
		arr = new JSONArray(response.toString());				
		for (int i = 0; i < arr.length(); i++){
			valuta = arr.getJSONObject(i).getString("Valuta");
			vrijednost = Double.parseDouble(arr.getJSONObject(i).getString("Srednji za devize").replaceFirst(",", "."));
			jedinica = Double.parseDouble(arr.getJSONObject(i).getString("Jedinica"));
			valuteKV.put(valuta, vrijednost);
			jediniceKV.put(valuta, jedinica);
		}
				valuteKV.put("KN", 1.);
				jediniceKV.put("KN", 1.);
				ObservableList<String> list=FXCollections.observableArrayList(valuteKV.keySet());
				comboOne.setItems(list);
				comboTwo.setItems(list);
				comboOne.setPromptText("-odaberi-");
				comboTwo.setPromptText("-odaberi-");
				lista.setEditable(false);
				lista.setWrapText(true);		
				lista.setText(valuteKV.toString().replace("{","").replace("}",""));
				textField.setText("0");
			}
			catch (IOException | JSONException e) {
				e.printStackTrace();
		}			
	}
	public void buttonClickHandler(ActionEvent evt) {
		clickedButton = (Button) evt.getTarget();
		buttonLabel = clickedButton.getText();
		try {
			if("Preraèunaj".equals(buttonLabel)) {	
				textValue = textField.getText();
				if("0".equals(textValue) || "".equals(textValue)) {
					status.setText("Unesite iznos za konverziju!");
				}
				else {		
					if(comboOne.getValue() == null || comboTwo.getValue() == null) {
						status.setText("Odaberite valutu!");
					}
					else {//----------------------------------------------------------------------I Z R A È U N----
						jedinica1 = jediniceKV.get(comboOne.getValue());
						jedinica2 = jediniceKV.get(comboTwo.getValue());
						doubleValue = Double.parseDouble(textValue);
						df = new DecimalFormat("#0.00");
						sum = (valuteKV.get(comboOne.getValue())/jedinica1)*doubleValue;
						finishSum = sum/(valuteKV.get(comboTwo.getValue())/jedinica2);
						formated = (df.format(finishSum));
						status.setText("Rezultat konverije:    "+textValue+" "+comboOne.getValue()+" = "+ formated+" "+comboTwo.getValue());		
						}
					}
				}
			}
		catch(NullPointerException e){
			status.setText("Sve je pošlo po zlu! Nazovite administratora!");
			}
		}
	}
